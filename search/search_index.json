{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Doku","text":"<p>Doku is a lightweight web application that helps you monitor Docker disk usage through a clean, intuitive interface.</p> <p> </p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>For those eager to get started, here\u2019s the fastest way to run Doku:</p> <pre><code>docker run -d -v /var/run/docker.sock:/var/run/docker.sock:ro -v /:/hostroot:ro -p 9090:9090 amerkurev/doku\n</code></pre> <p>Then open http://localhost:9090/ in your browser. That\u2019s it!</p> <p>This command runs Doku with default settings and read-only access to your Docker socket and filesystem. See the sections below for more detailed setup options.</p> <p></p>"},{"location":"#features","title":"Features","text":"<p>Doku monitors disk space used by:</p> <ul> <li>Images</li> <li>Containers</li> <li>Volumes</li> <li>Builder cache</li> <li>Overlay2 storage (typically the largest consumer of disk space)</li> <li>Container logs</li> <li>Bind mounts</li> </ul>"},{"location":"#getting-doku","title":"Getting Doku","text":"<p>Pull the latest release from the Docker Hub:</p> <pre><code>docker pull amerkurev/doku:latest\n</code></pre>"},{"location":"#using-doku","title":"Using Doku","text":"<p>The simplest way to use Doku is to run the Docker container. You\u2019ll need to mount two key resources:</p> <ol> <li>The Docker Unix socket with <code>-v /var/run/docker.sock:/var/run/docker.sock:ro</code></li> <li>The top-level directory (<code>/</code>) of the host machine with <code>-v /:/hostroot:ro</code></li> </ol> <p>The root directory mount is critical for Doku to calculate disk usage of logs, bind mounts, and especially Overlay2 storage. Without this mount, many key features of Doku will not function properly.</p> <pre><code>docker run --name doku -d -v /var/run/docker.sock:/var/run/docker.sock:ro -v /:/hostroot:ro -p 9090:9090 amerkurev/doku\n</code></pre> <p>Important: All host mounts are in read-only (ro) mode. This ensures Doku can only read data and cannot modify or delete any files on your host system. Doku is strictly a monitoring tool and never performs any cleanup or disk space reclamation actions on its own.</p> <p>For more advanced configurations, you can add SSL certificates, authentication, and environment variables:</p> <pre><code>docker run -d --name doku \\\n    --env-file=.env \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /:/hostroot:ro \\\n    -v ${PWD}/.htpasswd:/.htpasswd \\\n    -v ${PWD}/.ssl/key.pem:/.ssl/key.pem \\\n    -v ${PWD}/.ssl/cert.pem:/.ssl/cert.pem \\\n    -p 9090:9090 \\\n    amerkurev/doku\n</code></pre> <p>The <code>--env-file=.env</code> option allows you to specify various configuration parameters through environment variables. See the \u201cConfiguration Options\u201d section below for details on all available settings.</p> <p>Doku will be available at http://localhost:9090/. You can change <code>-p 9090:9090</code> to any port. For example, if you want to view Doku over port 8080 then you would do <code>-p 8080:9090</code>.</p>"},{"location":"#configuration-options","title":"Configuration Options","text":"<p>Doku can be configured using environment variables. You can set these either directly when running the container or through an environment file passed with <code>--env-file=.env</code>.</p> Environment Variable Description Default HOST Interface address to bind the server to 0.0.0.0 PORT Web interface port number 9090 LOG_LEVEL Logging detail level (debug, info, warning, error, critical) info SI Use SI units (base 1000) instead of binary units (base 1024) true BASIC_HTPASSWD Path to the htpasswd file for basic authentication /.htpasswd ROOT_PATH URL prefix when served behind a proxy (e.g., \u201c/doku\u201d) \u201d\u201c SCAN_INTERVAL How often to collect basic Docker usage data (in seconds) 60 SCAN_LOGFILE_INTERVAL How frequently to check container log sizes (in seconds) 300 SCAN_BINDMOUNTS_INTERVAL Time between bind mount scanning operations (in seconds) 3600 BINDMOUNT_IGNORE_PATTERNS Paths matching these patterns will be excluded from bind mount scanning (semicolon-separated) (e.g., <code>/home/*;/tmp/*;*/.git/*</code>) \u201d\u201c SCAN_OVERLAY2_INTERVAL How often to analyze Overlay2 storage (in seconds) 86400 DISABLE_OVERLAY2_SCAN Disable Overlay2 storage scanning false SCAN_INTENSITY Performance impact level: \u201caggressive\u201d (highest CPU usage), \u201cnormal\u201d (balanced), or \u201clight\u201d (lowest impact) normal SCAN_USE_DU Use the faster system <code>du</code> command for disk calculations instead of slower built-in methods true UVICORN_WORKERS Number of web server worker processes 1 DEBUG Enable debug mode false DOCKER_HOST Connection string for the Docker daemon unix:///var/run/docker.sock DOCKER_TLS_VERIFY Enable TLS verification for Docker daemon connection false DOCKER_CERT_PATH Directory containing Docker TLS certificates null DOCKER_VERSION Docker API version to use auto DOCKER_TIMEOUT Timeout in seconds for Docker API requests 60 DOCKER_MAX_POOL_SIZE Maximum number of connections in the Docker API connection pool 10 DOCKER_USE_SSH_CLIENT Use SSH for Docker daemon connection instead of HTTP/HTTPS false"},{"location":"#example-env-file","title":"Example .env file","text":"<p>Here\u2019s an example <code>.env</code> file with some commonly adjusted settings:</p> <pre><code>PORT=9090 \nLOG_LEVEL=info \nSI=true\nDOCKER_TIMEOUT=200 \nSCAN_INTERVAL=200 \nSCAN_INTENSITY=light \nDEBUG=false\n</code></pre> <p>To use an environment file with Docker, include it when running the container:</p> <pre><code>docker run -d --name doku --env-file=.env -v /var/run/docker.sock:/var/run/docker.sock:ro -v /:/hostroot:ro -p 9090:9090 amerkurev/doku\n</code></pre> <p>This loads all the variables from your <code>.env</code> file and applies them to Doku\u2019s configuration.</p>"},{"location":"#basic-authentication","title":"Basic Authentication","text":"<p>Doku supports HTTP basic authentication to secure access to the web interface. Follow these steps to enable it:</p> <ol> <li>Create an htpasswd file with bcrypt-encrypted passwords:</li> </ol> <pre><code>htpasswd -cbB .htpasswd admin yourpassword\n</code></pre> <p>Add additional users with:</p> <pre><code>htpasswd -bB .htpasswd another_user anotherpassword\n</code></pre> <ol> <li>Mount the htpasswd file when running Doku:</li> </ol> <pre><code>docker run -d --name doku \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /:/hostroot:ro \\\n    -v ${PWD}/.htpasswd:/.htpasswd \\\n    -p 9090:9090 \\\n    amerkurev/doku\n</code></pre> <ol> <li>If you want to use a custom path for the htpasswd file, specify it with the <code>BASIC_HTPASSWD</code> environment variable:</li> </ol> <pre><code>docker run -d --name doku \\\n    -v /var/run/docker.sock:/var/run/docker.sock:ro \\\n    -v /:/hostroot:ro \\\n    -v ${PWD}/custom/path/.htpasswd:/auth/.htpasswd \\\n    -e BASIC_HTPASSWD=/auth/.htpasswd \\\n    -p 9090:9090 \\\n    amerkurev/doku\n</code></pre> <p>Authentication will be required for all requests to Doku once enabled.</p>"},{"location":"#supported-architectures","title":"Supported Architectures","text":"<p>Doku container images are available for the following platforms:</p> <ul> <li>linux/amd64</li> <li>linux/arm64</li> </ul> <p>The multi-arch images are automatically selected based on your host platform when pulling from Docker Hub.</p>"},{"location":"#license","title":"License","text":"<p>MIT</p>"}]}